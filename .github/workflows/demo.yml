name: NextJS automation Workflow
on: [push]
jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      # Test pnpm install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: actions/cache@v3
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}-react-next

      # - uses: actions/cache@v3
      #   with:
      #     path: '**/node_modules'
      #     key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-dependencies-
      #       ${{ runner.os }}-

  linting:
    name: Code Linting
    runs-on: ubuntu-20.04
    needs: setup
    strategy:
      matrix:
        node-version: [16.x]
    permissions:
      contents: read
      security-events: write
    steps:
      # - uses: pnpm/action-setup@v2.2.2
      #   with:
      #     version: 7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-react-next

      - name: Run ESLint
        run: pnpm lint
          --output-file eslint-results.sarif
      #   continue-on-error: true

      # - name: Upload analysis results to GitHub
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: eslint-results.sarif
      #     wait-for-processing: true

    # build:
    #   runs-on: ubuntu-20.04
    #   strategy:
    #     matrix:
    #       node-version: [16.x]
    #   steps:
    #     - name: Install dependencies
    #       run: pnpm install

    #     - run: echo "üçè This job's status is ${{ job.status }}."
